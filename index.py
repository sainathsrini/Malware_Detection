from turtle import goto
import numpy as np
import os 
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix, accuracy_score, classification_report
from sklearn.linear_model import LogisticRegression
from django.http import HttpResponse
from django.shortcuts import render


data = pd.read_csv('andro_dataset.csv')
#print(data)


x = data.iloc[:, 1:499]
y = data.iloc[:, 499]

#print(x)
#print(y)

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.25, random_state = 0)


classifier = LogisticRegression(C=5.0, random_state=42)
classifier.fit(x_train, y_train)

y_pred = classifier.predict(x_test)

#print("Accuracy Score :")
#print(accuracy_score(y_test,y_pred)*100)
#print("Classification Report :")
#print(classification_report(y_test,y_pred))

import pandas as pd
aa=pd.read_csv("andro_data_copy.csv")
df=pd.DataFrame(aa)
df=df.drop(['CLASS'], axis=1)
df=df.drop(['NAME'], axis=1)
#df
df = df.append(pd.Series(int(0), index=df.columns), ignore_index=True)
#df

from androguard.misc import AnalyzeAPK
import androguard
your_path = '/media/kali/imp/iiitmk/Semester_3/Malware_analysis_Mini_Project/Final/apk_files'
files = os.listdir(your_path)
for file in files:
    if os.path.isfile(os.path.join(your_path, file)):
        #f = open(os.path.join(your_path, file),'r')
        from androguard.misc import AnalyzeAPK
        a,d,dx=AnalyzeAPK(os.path.join(your_path, file))
        perm=a.get_permissions()
        #perm
        for item in df.columns:
          for i in perm:
            if i==item:
              df.at[0,item]=1
              break
            else:
              df.at[0,item]=0
        #f.close()


test_data = df
#test_data

import pickle
filename = 'finalized_model.sav'

pickle.dump(classifier, open(filename, 'wb'))


loaded_model = pickle.load(open(filename, 'rb'))
result = loaded_model.predict(test_data)

if result == 1:
  content = "Malicious"
else:
  content = "Benign"

print(content)  


  
   
 
